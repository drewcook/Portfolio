@{
    ViewBag.Title = "Poker Player";
}
<head>
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
<link rel="icon" href="/favicon.ico" type="image/x-icon">
</head>
<h2 align="center">Poker Player</h2>
<div class="backlink"><p><a href="@Url.Action("Index", "Work")"><<< Back</a></p></div>

<div class="work-image" id="pokerplayer">
    <div class="image active"><img src="@Url.Content("~/Content/images/PokerPlayerText.png")" alt="Poker Player Text"  width="450" height="324"/></div>
    <div class="image hide"><img src="@Url.Content("~/Content/images/PokerPlayerHand.png")" alt="Poker Player Hand"  width="450" height="324"/></div>
    <div class="image hide"><img src="@Url.Content("~/Content/images/PokerPlayerHands.png")" alt="Poker Player Hands"  width="450" height="324"/></div>
</div>

<h2 align="center">Description</h2>
<ul>
    <li>This is a game where you can play some poker!  The user will get dealt five cards each with its own suit and rank, and the program will determine from those cards what kind of hand you have.  This game follows the basic rules of poker in which a high card hand is the worst hand to be dealt and a royal flush is the best hand to be dealt.</li>
    <li>The game will deal twenty hands.  After each hand is dealt, the deck of cards will be shuffle again, so there will be a fresh deck to draw from each time.  It is a very simple game with some complex coding.</li>
    <li>The code itself is somewhat intensive for such a simple game, and uses multiple classes, an enumeration of hands, a deck of cards, and functions such as dealing the cards and shuffling the deck.  There are many lambda expressions being used to determine what kind of hand it is (i.e. straight, flush, four of a kind).</li>
</ul>
<p>Have your luck at the poker table and click the link below to play!</p>
<div class="download"><p><a href="@Url.Content("~/Content/gamelinks/PokerPlayer.exe")">Download Here</a></p></div>